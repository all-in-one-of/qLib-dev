{
    channel attr_ramp1pos {
      lefttype = extend
      righttype = extend
      flags = 0
      start = 60.416667938232422
      segment { length = 0 expr = ch(\"../attr_ramp1pos\") }
    }
    channel attr_ramp1cr {
      lefttype = extend
      righttype = extend
      flags = 0
      start = 60.416667938232422
      segment { length = 0 expr = ch(\"../attr_ramp1cr\") }
    }
    channel attr_ramp1cg {
      lefttype = extend
      righttype = extend
      flags = 0
      start = 60.416667938232422
      segment { length = 0 expr = ch(\"../attr_ramp1cg\") }
    }
    channel attr_ramp1cb {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      start = 60.416667938232422
      segment { length = 0 value = 1 1 expr = ch(\"../attr_ramp1cb\") }
    }
    channel attr_ramp1interp {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      start = 60.416667938232422
      segment { length = 0 value = 1 1 expr = ch(\"../attr_ramp1interp\") }
    }
    channel attr_ramp2pos {
      lefttype = extend
      righttype = extend
      flags = 0
      start = 60.416667938232422
      segment { length = 0 expr = ch(\"../attr_ramp2pos\") }
    }
    channel attr_ramp2cr {
      lefttype = extend
      righttype = extend
      flags = 0
      start = 60.416667938232422
      segment { length = 0 expr = ch(\"../attr_ramp2cr\") }
    }
    channel attr_ramp2cg {
      lefttype = extend
      righttype = extend
      flags = 0
      start = 60.416667938232422
      segment { length = 0 expr = ch(\"../attr_ramp2cg\") }
    }
    channel attr_ramp2cb {
      lefttype = extend
      righttype = extend
      flags = 0
      start = 60.416667938232422
      segment { length = 0 expr = ch(\"../attr_ramp2cb\") }
    }
    channel attr_ramp2interp {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      start = 60.416667938232422
      segment { length = 0 value = 1 1 expr = ch(\"../attr_ramp2interp\") }
    }
    channel attr_name {
      lefttype = extend
      righttype = extend
      defaultString = \"pscale\"
      flags = 0
      start = 60.416667938232422
      segment { length = 0 expr = chs(\"../attr_name\") }
    }
    channel srcmin {
      lefttype = extend
      righttype = extend
      flags = 0
      start = 60.416667938232422
      segment { length = 0 expr = "if(  ch(\"../srcautofit\")==0,  ch(\"../srcmin\"),  detail(\"../minmax\", \"__vis_attr_min\", 0)-0.001  )" }
    }
    channel srcmax {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      start = 60.416667938232422
      segment { length = 0 value = 1 1 expr = "if(  ch(\"../srcautofit\")==0,  ch(\"../srcmax\"),  detail(\"../minmax\", \"__vis_attr_max\", 0)+0.001  )" }
    }
    channel attr_ramp {
      lefttype = extend
      righttype = extend
      default = 2
      flags = 0
      start = 60.416667938232422
      segment { length = 0 value = 2 2 expr = ch(\"../attr_ramp\") }
    }
    channel attr_type {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../attr_type\") }
    }
    channel attr_comp {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../attr_comp\") }
    }
    channel display_gamma {
      lefttype = extend
      righttype = extend
      default = 2.2000000476837158
      flags = 0
      segment { length = 0 value = 2.2000000476837158 2.2000000476837158 expr = ch(\"../display_gamma\") }
    }
    channel src_exp {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../srcexp\") }
    }
    channel src_repeat {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../srcrepeat\") }
    }
    channel range_in {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../range_in\") }
    }
    channel range_out {
      lefttype = extend
      righttype = extend
      default = 0.5
      flags = 0
      segment { length = 0 value = 0.5 0.5 expr = ch(\"../range_out\") }
    }
  }

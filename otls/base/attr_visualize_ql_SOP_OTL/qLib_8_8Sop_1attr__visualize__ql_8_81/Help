#icon: BUTTONS/displayoptions
#context: sop
#type: node

= Attr Visualize qL =

*interface version 1*

"""Various visualization types for geometry attributes."""

This node can perform various attribute visualizations:

- Display attribute values on geometry, using a color ramp
- Show vector attributes (as lines; multiple vector attributes can be displayed)
- Show 'pscale'-type attribute values (by copying appropriately-scaled geometry to each point)

Combinations are also supported, e.g. you can display velocity vectors and have them colored
according to their length, etc.

TIP:
    This node is very useful as "visual checkpoint" when constructing complex effects involving
    more attributes. It's good practice to keep (maintain) visualizer node(s) at important points of
    the node tree.

NOTE:
    By default the primitive-count limit is enabled (to avoid hanging Houdini when connecting this node
    to heavy geometry). This setting may also delete all "unused" points, so you might see some unexpected
    results if applied to point clouds.

    Use the _Preprocessing/Decimation -> Presets_ menu to quickly switch between the most frequently
    used settings. For visualizing point clouds, choose _Point Cloud Mode_.


@Parameters

    Input:
        Select which geometry input to visualize. Two (2) input slots are available.

        Workflow-wise this allows to connect a "before" and an "after" state, and quickly switch between
        them for comparison.

    Preprocess:

        Decimation & Safeguards:

            Ways of reducing the amount of geometry to visualize.

            Keep Every Nth:
                Keep only a single item for each N points or primitives.
    
            Prim. # Limit:
                Keep only the specified amount of primitives before doing any visualization.
                This is a safeguard measure to avoid accidents like hanging on a very
                large geometry.

                *This function is intentionally enabled by default.*


        Attribute Promotion:
            Parameters in this tab allows visualizing other attribute types than per-point,
            by modifying the geometry itself and/or convert attribute(s) to per-point type.

            Unique Points:
                This splits all shared geometry points, so there will be the same number of
                points as vertices -- allowing per-vertex attributes to be visualized as
                per-point.
    
            Primitive Scale:
                Applied to all primitives after the Unique Points operation. Especially with
                previously shared points, this can make individual points visually more
                distinct.
    
            Promote Attribute(s) to Per-Point:
                After the preprocessing above, all other attribute types (ie. per-vertex,
                per-primitive, etc.) can safely be converted to per-point type for
                visualization. A list of multiple attribute names is supported.

    Scalars:
        Visualization of floating-point values by mapping the values to a color ramp
        and apply the colors to the geometry accordingly.

        NOTE:
            Other visualizations inherit these colors.

        Attribute Name, Type, Component:
            Name of the attribute to visualize (a single attribute name only), as well as
            the attribute type (integer, float, vector) and component (X, Y, Z or length).

        Value Min, Max, Exponent:
            The value range the color ramp will be mapped to.

        Repeat:
            The ramp will be "repeated" for values outside the specified range
            (so values outside the visualization range can still be distinguished).

        Attribute Color Ramp:
            The ramp representing the range of values.

        In/Out Range Mult:
            Intensity multiplier (brightness) both for values inside and outside the
            visualization range. By default outside-range colors have an 50% brightness (`0.5`).

        Display Gamma:
            Color-correction for non-linear viewport settings. Set this gamma value to
            the same you set up in your viewport (`2.2` for sRGB).

    Vectors:
        Vector visualization (drawn as line segments from geometry points).

        Attribute Name:
            Name of the attribute(s) to visualize (multiple attributes can be specified).

        Scale:
            An uniform scaling factor on the vectors display.

        Unit Length:
            The equivalent of unit type. This is relevant only with velocity-type vectors
            where the unit is distance-per-second. (If visualizing velocity, select "`Velocity`"
            from the preset menu.)

            Note that this applies to all vectors being visualized.

    Orient & Scale:
        Orient/scale-type visualization (implemented using a Copy SOP). A geometric object is
        copied to each point of the input geometry.
        - The size of each copy will be affected by the `pscale` attribute;
        - Orientation will be affected by existing orientation (`orient`), velocity (`v`),
            normal (`N`) and up vector (`up`) attributes.

    Markers:
        Here the specified attributes can be automatically set up as markers for viewport display
        (*Display Options->Markers* -- press `D` in the viewport).

        point, primitive, vertex:
            Viewport display markers will be generated for all the attributes listed in these fields.

            (An enabled and empty field results in using all attributes).

        As Numeric:
            The attributes listed here will always be displayed in numeric (textual) format, regardless
            of their type (useful for numeric display of vector attributes).

        As Velocity:
            The attributes listed here will be considered as velocity-type attributes (they use a different
            scale setting).

        Vector Scale:
            The `scale` display setting for regular vector attributes.

        Velocity Scale:
            The `scale` display setting for velocity-type vector attributes (see above.)

        Create/Update Markers:
            Press this button to build or update the marker list in the viewports' Display Options.

        Clear Markers:
            Pressing this button will delete all automatically created markers.
            User-defined "regular" markers will not be affected.

        Clear All Markers...:
            This button will delete _all_ markers from the viewports' Display Options.

    Output:
        Settings on how to output visualization results.



@related
    - [Group Visualize qL|Node:sop/qLib::group_visualize_ql::1]
    - [Point Attr qL|Node:sop/qLib::pointattr_ql::1]
    - [Vector qL|Node:sop/qLib::vector_ql::1]
    - [Node:sop/color]
    - [Node:sop/copy]


@Release_Notes Release Notes

_interface version 1_ ---

2012-11-29:
    New functionality: automatic attribute marker generation for viewport display options.

2012-11-08:
    - Bug fix: Orient & Scale preview didn't work if `pscale` attribute was already present.
    - Fixed help release notes section.

2012-10-24:
    - Enhancement: default primitive safeguard settings now don't delete all points from points-only geometry.


_older versions_ ---

0.0.6:
    Support for multiple inputs with an input selector (allows connecting and switching between 'before'/'after' states).

0.0.5:
    _Floats & Colors_ section improvements:
    - Added exponent (gamma) to value mapper
    - Added `Repeat` toggle
    - Added intensity multipliers for within and outside the value range
    - The _length_ component is now the default for vector attributes

0.0.4:
    - Added geometry reduction/limit safeguard
    - More consolidation on both UI and internal workings
    - Minor bug fixes

0.0.3:
    - A rough help page
    - Minor UI cleanups
    - Added 'Visualization Geometry Only' toggle
    - Vector mode now supports multiple vectors

0.0.2:
    Functionality additions:
    - Geometry preprocessing (allows visualizing non-point attr types)
    - Vector visualizations
    - pscale/Copy SOP-style visualization

0.0.1:
    First version.

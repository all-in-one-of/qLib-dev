{
    channel invertxform {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../xform2/invertxform\") }
    }
    channel vlength {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../xform2/vlength\") }
    }
    channel updatenmls {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../xform2/updatenmls\") }
    }
    channel scale {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../xform2/scale\") }
    }
    channel pz {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../xform2/pz\") }
    }
    channel py {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../xform2/py\") }
    }
    channel px {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../xform2/px\") }
    }
    channel shear3 {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../xform2/shear3\") }
    }
    channel shear2 {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../xform2/shear2\") }
    }
    channel shear1 {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../xform2/shear1\") }
    }
    channel sz {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../xform2/sz\") }
    }
    channel sy {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../xform2/sy\") }
    }
    channel sx {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../xform2/sx\") }
    }
    channel rz {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../xform2/rz\") }
    }
    channel ry {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../xform2/ry\") }
    }
    channel rx {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../xform2/rx\") }
    }
    channel tz {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../xform2/tz\") }
    }
    channel ty {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../xform2/ty\") }
    }
    channel tx {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../xform2/tx\") }
    }
    channel rOrd {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../xform2/rOrd\") }
    }
    channel xOrd {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../xform2/xOrd\") }
    }
    channel grouptype {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../xform2/grouptype\") }
    }
    channel group {
      lefttype = extend
      righttype = extend
      defaultString = \"\"
      flags = 0
      segment { length = 0 expr = chs(\"../xform2/group\") }
    }
  }

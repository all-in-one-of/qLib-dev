{
    channel vex_group {
      lefttype = extend
      righttype = extend
      defaultString = \"\"
      flags = 0
      segment { length = 0 expr = chs(\"../vex_group\") }
    }
    channel attrib {
      lefttype = extend
      righttype = extend
      defaultString = \"amount\"
      flags = 0
      segment { length = 0 expr = chs(\"../attrib\") }
    }
    channel trs {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../trs\") }
    }
    channel xyz {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../xyz\") }
    }
    channel trans1 {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../trans1\") }
    }
    channel trans2 {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../trans2\") }
    }
    channel trans3 {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../trans3\") }
    }
    channel rot1 {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../rot1\") }
    }
    channel rot2 {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../rot2\") }
    }
    channel rot3 {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../rot3\") }
    }
    channel scale1 {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../scale1\") }
    }
    channel scale2 {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../scale2\") }
    }
    channel scale3 {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../scale3\") }
    }
    channel pivot1 {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../pivot1\") }
    }
    channel pivot2 {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../pivot2\") }
    }
    channel pivot3 {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../pivot3\") }
    }
    channel invert {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../invert\") }
    }
    channel envelope {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../envelope\") }
    }
    channel invert_weight {
      lefttype = extend
      righttype = extend
      flags = 0
      start = 38.166667938232422
      segment { length = 0 expr = ch(\"../invert_weight\") }
    }
  }

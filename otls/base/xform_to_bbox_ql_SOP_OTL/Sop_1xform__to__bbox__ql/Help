#type: node
#context: sop
#icon: SOP/bound

= Xform to BBox qL =

*Version 0.0.4*

"""Fits the input geometry into the bounding box of a secondary geometry."""

@inputs
    Input Geometry:
        The geometry to fit or clamp to the bounding box.

    Bounding Geometry:
        The geometry to be used as a bounding box. The geometry can be of any type
        and shape (only its bounds will be used).

    Input Proxy (optional):
        If connected, the bounds of this geometry will be used for fitting calculations (instead of
        the `Input Geometry`'s).

        This can be useful for "unusual" geometry types such as metaballs: connect a [tessellated|Node:sop/convert]
        version here to get more a accurate fit.


@parameters
    Mode:
        How to fit the input geometry within the bounds of the secondary geometry.

        Fit into Box:
            Apply a non-proportional scaling to the input geometry to fit within bounds.

        Clamp to Box Bounds:
            Clamp the coordinates of each point to be fall within bounds range.

            NOTE:
                This mode can be useful for geometry with pieces that 'fell' too far
                (e.g. when trying to add smoke effects to an RBD simulation, where
                a few RBD pieces fell through the floor or were shot towards 'infinity').

        Create Groups Only:
            Do not modify the geometry itself, just create the point groups (if enabled).

    Padding, Low/High:
        Extra padding distance along the three world axes.

    Inside Group:
        Create a group with the given name, containing the points that are inside the box boundaries.

    Outside Group:
        Create a group with the given name for all the points that fell outside the box boundaries.

        WARNING:
            When clamping simulated geometry points (such as RBD fractures), it's good practice to
            zero out the velocities of the outlier points. (Even with clamped point positions,
            large per-point velocities can mess up any following simulation or rendering process.)


@related
    - [Node:sop/xform]
    - [Node:sop/bound]
    - [Xform by Points qL|Node:sop/xform_by_points_ql]


@Release_Notes Release Notes

    Version 0.0.4:
        - Fitting now works on all primitive types (including sphere primitives, metaballs, etc).
        - There's an optional third input for a tessellated version of the input geometry (to enable more accurate fitting).
        - Added 'create groups only' mode.
        - Guide display options.

    Version 0.0.3:
        - Options for creating inside/outside point groups.
        - Added guide geometry (padding values included).

    Version 0.0.2:
        Added 'clamp' fitting mode (and `Mode` parameter).

    Version 0.0.1:
        Initial release.

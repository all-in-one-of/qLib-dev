{
    channel noise_type {
      lefttype = extend
      righttype = extend
      defaultString = \"onoise\"
      flags = 0
      segment { length = 0 expr = chs(\"../noise_type\") }
    }
    channel along_normal {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../along_normal\") }
    }
    channel trs {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../trs\") }
    }
    channel xyz {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../xyz\") }
    }
    channel trans1 {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../trans1\") }
    }
    channel trans2 {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../trans2\") }
    }
    channel trans3 {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../trans3\") }
    }
    channel rot1 {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../rot1\") }
    }
    channel rot2 {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../rot2\") }
    }
    channel rot3 {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../rot3\") }
    }
    channel scale1 {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../scale1\") }
    }
    channel scale2 {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../scale2\") }
    }
    channel scale3 {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../scale3\") }
    }
    channel pivot1 {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../pivot1\") }
    }
    channel pivot2 {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../pivot2\") }
    }
    channel pivot3 {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../pivot3\") }
    }
    channel rough {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../rough\") }
    }
    channel atten {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../atten\") }
    }
    channel turb {
      lefttype = extend
      righttype = extend
      default = 5
      flags = 0
      segment { length = 0 value = 5 5 expr = ch(\"../turb\") }
    }
    channel absolute {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../absolute\") }
    }
    channel vex_group {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = chs(\"../vex_group\") }
    }
    channel clamp {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../clamp\") }
    }
    channel clamp_min1 {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../clamp_min1\") }
    }
    channel clamp_min2 {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../clamp_min2\") }
    }
    channel clamp_min3 {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../clamp_min3\") }
    }
    channel calmp_max1 {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../calmp_max1\") }
    }
    channel calmp_max2 {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../calmp_max2\") }
    }
    channel calmp_max3 {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../calmp_max3\") }
    }
    channel amount {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../amount\") }
    }
    channel axis_amount1 {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../axisamount1\") }
    }
    channel axis_amount2 {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../axisamount2\") }
    }
    channel axis_amount3 {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../axisamount3\") }
    }
    channel stricktly_along_normal {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../strickt\") }
    }
  }

{
    channel pscaleramp1pos {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../stemwidthu1pos\") }
    }
    channel pscaleramp1value {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../stemwidthu1value\") }
    }
    channel pscaleramp1interp {
      lefttype = extend
      righttype = extend
      default = 2
      flags = 0
      segment { length = 0 value = 2 2 expr = ch(\"../stemwidthu1interp\") }
    }
    channel pscaleramp2pos {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../stemwidthu2pos\") }
    }
    channel pscaleramp2value {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../stemwidthu2value\") }
    }
    channel pscaleramp2interp {
      lefttype = extend
      righttype = extend
      default = 2
      flags = 0
      segment { length = 0 value = 2 2 expr = ch(\"../stemwidthu2interp\") }
    }
    channel destmin {
      lefttype = extend
      righttype = extend
      default = 0.766
      flags = 0
      segment { length = 0 value = 0.76599997282028198 0.76599997282028198 expr = ch(\"../carve1/domainu2\") }
    }
    channel pscaleramp {
      lefttype = extend
      righttype = extend
      default = 3
      flags = 0
      segment { length = 0 value = 3 3 expr = ch(\"../stemwidthu\") }
    }
    channel pscaleramp3pos {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../stemwidthu3pos\") }
    }
    channel pscaleramp3value {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../stemwidthu3value\") }
    }
    channel pscaleramp3interp {
      lefttype = extend
      righttype = extend
      default = 2
      flags = 0
      segment { length = 0 value = 2 2 expr = ch(\"../stemwidthu3interp\") }
    }
  }

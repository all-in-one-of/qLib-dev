# Dialog script for qLib::xform_by_points_ql::1 automatically generated 06/13/12 22:36:59

{
    name	qLib::xform_by_points_ql::1
    script	qLib::xform_by_points_ql::1
    label	"Xform by Points qL"

    help {
	""
    }

    inputlabel	1	Geometry
    inputlabel	2	"Rest Points"
    inputlabel	3	"Transform Points"

    parm {
	name	"vex_group"
	label	"Point Group"
	type	string
	default	{ "" }
	menutoggle	{
	    [ "opmenu -l apply_transforms vex_group" ]
	}
	range	{ 0 1 }
	export	none
	parmtag	{ "autoscope" "0000000000000000" }
    }
    group {
	name	"point_index_attr"
	label	"Point Index Attribute"
	tabbreak

	parm {
	    name	"index_attr"
	    label	"Index Attribute"
	    type	string
	    default	{ "__origpt" }
	    help	"An attribute that determines which geometry component belongs to which xform-point."
	    menureplace	{
		[ "r = ['piece', 'piece (h12)', '__origpt', '__origpt (h11)']" ]
		[ "" ]
		[ "try:" ]
		[ "    attrs = hou.pwd().geometry().primAttribs()" ]
		[ "    attrs = [ a.name() for a in attrs if a.dataType() is not hou.attribData.String ]" ]
		[ "    " ]
		[ "    for a in attrs:" ]
		[ "        r.append(a)" ]
		[ "        r.append(a)" ]
		[ "except:" ]
		[ "    pass" ]
		[ "" ]
		[ "return r" ]
		language	python
	    }
	    range	{ 0 1 }
	    export	none
	    parmtag	{ "parmvop" "1" }
	    parmtag	{ "autoscope" "0000000000000000" }
	}
	parm {
	    name	"convert_to_point"
	    label	"Convert to Per-Point Type"
	    type	toggle
	    default	{ "1" }
	    help	"Since the index attribute is required to be per-point,\\nit can be converted here."
	    range	{ 0! 10 }
	    export	none
	    parmtag	{ "autoscope" "0000000000000000" }
	}
	parm {
	    name	"inclass"
	    label	"Original Class"
	    type	ordinal
	    default	{ "primitive" }
	    disablewhen	"{ convert_to_point == 0 }"
	    menu	{
		"detail"	"Detail"
		"primitive"	"Primitive"
		"point"	"Point"
		"vertex"	"Vertex"
	    }
	    range	{ 0 1 }
	    export	none
	    parmtag	{ "autoscope" "0000000000000000" }
	}
	parm {
	    name	"method"
	    label	"Promotion Method"
	    type	ordinal
	    default	{ "first" }
	    disablewhen	"{ convert_to_point == 0 }"
	    menu	{
		"max"	"Maximum"
		"min"	"Minimum"
		"mean"	"Average"
		"mode"	"Mode"
		"median"	"Median"
		"sum"	"Sum"
		"sumsquare"	"Sum of Squares"
		"rms"	"Root Mean Square"
		"first"	"First Match"
		"last"	"Last Match"
	    }
	    range	{ 0 1 }
	    export	none
	    parmtag	{ "autoscope" "0000000000000000" }
	}
	parm {
	    name	"del_index_on_completion"
	    label	"Delete This Attribute on Completion"
	    type	toggle
	    default	{ "1" }
	    help	"Delete the converted index attribute after the operation.\\n(For large amonts of geometry it might be faster not to delete it.)"
	    disablewhen	"{ convert_to_point == 0 }"
	    range	{ 0! 10 }
	    export	none
	    parmtag	{ "autoscope" "0000000000000000" }
	}
    }

    group {
	name	"folder0"
	label	"Transformation"

	parm {
	    name	"orient_mode"
	    label	"Orient Mode"
	    type	integer
	    default	{ "0" }
	    menu	{
		"0"	"Vector Pairs (aim/up)"
		"1"	"Quaternion (orient)"
	    }
	    range	{ 0 10 }
	    export	none
	}
	group {
	    name	"rest_attrs"
	    label	"Rest Point Attributes"

	    parm {
		name	"rest_p_attr"
		label	"Rest Position"
		type	string
		default	{ "P" }
		menureplace	{
		    "rest"	"rest"
		    "P"	"position (P)"
		}
		range	{ 0 1 }
		export	none
		parmtag	{ "parmvop" "1" }
		parmtag	{ "autoscope" "0000000000000000" }
	    }
	    parm {
		name	"rest_aim_attr"
		label	"Rest Aim Vector"
		type	string
		default	{ "N" }
		disablewhen	"{ orient_mode != 0 }"
		menureplace	{
		    "N"	"normal (N)"
		    "v"	"velocity (v)"
		    ""	"default (Z-)"
		}
		range	{ 0 1 }
		export	none
		parmtag	{ "parmvop" "1" }
		parmtag	{ "autoscope" "0000000000000000" }
	    }
	    parm {
		name	"rest_up_attr"
		label	"Rest Up Vector"
		type	string
		default	{ "up" }
		disablewhen	"{ orient_mode != 0 }"
		menureplace	{
		    "up"	"up vector (up)"
		    ""	"default (Y+)"
		}
		range	{ 0 1 }
		export	none
		parmtag	{ "parmvop" "1" }
		parmtag	{ "autoscope" "0000000000000000" }
	    }
	    parm {
		name	"rest_orient_attr"
		label	"Rest Orient"
		type	string
		default	{ "orient" }
		disablewhen	"{ orient_mode != 1 }"
		menureplace	{
		    "orient"	"orient"
		    "rorient"	"rorient"
		    "orient_r"	"orient_r"
		}
		range	{ 0 1 }
		export	none
		parmtag	{ "parmvop" "1" }
		parmtag	{ "autoscope" "0000000000000000" }
	    }
	}

	group {
	    name	"rest_attrs_1"
	    label	"Transform Point Attributes"

	    parm {
		name	"p_attr"
		label	"Position"
		type	string
		default	{ "P" }
		menureplace	{
		    "P"	"position (P)"
		}
		range	{ 0 1 }
		export	none
		parmtag	{ "parmvop" "1" }
		parmtag	{ "autoscope" "0000000000000000" }
	    }
	    parm {
		name	"aim_attr"
		label	"Aim Vector"
		type	string
		default	{ "N" }
		disablewhen	"{ orient_mode != 0 }"
		menureplace	{
		    "N"	"normal (N)"
		    "v"	"velocity (v)"
		    ""	"default (Z-)"
		}
		range	{ 0 1 }
		export	none
		parmtag	{ "parmvop" "1" }
		parmtag	{ "autoscope" "0000000000000000" }
	    }
	    parm {
		name	"up_attr"
		label	"Up Vector"
		type	string
		default	{ "up" }
		disablewhen	"{ orient_mode != 0 }"
		menureplace	{
		    "up"	"up vector (up)"
		    ""	"default (Y+)"
		}
		range	{ 0 1 }
		export	none
		parmtag	{ "parmvop" "1" }
		parmtag	{ "autoscope" "0000000000000000" }
	    }
	    parm {
		name	"orient_attr"
		label	"Orient"
		type	string
		default	{ "orient" }
		disablewhen	"{ orient_mode != 1 }"
		menureplace	{
		    "orient"	"orient"
		}
		range	{ 0 1 }
		export	none
		parmtag	{ "parmvop" "1" }
		parmtag	{ "autoscope" "0000000000000000" }
	    }
	}

    }

}

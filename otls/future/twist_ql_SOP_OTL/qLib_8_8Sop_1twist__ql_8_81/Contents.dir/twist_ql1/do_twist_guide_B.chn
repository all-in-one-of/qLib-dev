{
    channel _vex_uscale {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../do_twist_main/_vex_uscale\") }
    }
    channel _vex_pivot3 {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../do_twist_main/_vex_pivot3\") }
    }
    channel _vex_pivot2 {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../do_twist_main/_vex_pivot2\") }
    }
    channel _vex_pivot1 {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../do_twist_main/_vex_pivot1\") }
    }
    channel _vex_scale3 {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../do_twist_main/_vex_scale3\") }
    }
    channel _vex_scale2 {
      lefttype = extend
      righttype = extend
      default = 2
      flags = 0
      segment { length = 0 value = 2 2 expr = ch(\"../do_twist_main/_vex_scale2\") }
    }
    channel _vex_scale1 {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../do_twist_main/_vex_scale1\") }
    }
    channel _vex_rot3 {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../do_twist_main/_vex_rot3\") }
    }
    channel _vex_rot2 {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../do_twist_main/_vex_rot2\") }
    }
    channel _vex_rot1 {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../do_twist_main/_vex_rot1\") }
    }
    channel _vex_trans3 {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../do_twist_main/_vex_trans3\") }
    }
    channel _vex_trans2 {
      lefttype = extend
      righttype = extend
      default = 2
      flags = 0
      segment { length = 0 value = 2 2 expr = ch(\"../do_twist_main/_vex_trans2\") }
    }
    channel _vex_trans1 {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../do_twist_main/_vex_trans1\") }
    }
    channel _vex_xyz {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../do_twist_main/_vex_xyz\") }
    }
    channel _vex_trs {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../do_twist_main/_vex_trs\") }
    }
    channel _vex_object_name {
      lefttype = extend
      righttype = extend
      defaultString = chs(\"../xform_object\")
      flags = 0
      segment { length = 0 expr = chs(\"../do_twist_main/_vex_object_name\") }
    }
    channel _vex_use_obj {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../do_twist_main/_vex_use_obj\") }
    }
    channel _vex_l_gain {
      lefttype = extend
      righttype = extend
      default = 0.5
      flags = 0
      segment { length = 0 value = 0.5 0.5 expr = ch(\"../do_twist_main/_vex_l_gain\") }
    }
    channel _vex_l_bias {
      lefttype = extend
      righttype = extend
      default = 0.5
      flags = 0
      segment { length = 0 value = 0.5 0.5 expr = ch(\"../do_twist_main/_vex_l_bias\") }
    }
    channel _vex_y_gain {
      lefttype = extend
      righttype = extend
      default = 0.5
      flags = 0
      segment { length = 0 value = 0.5 0.5 expr = ch(\"../do_twist_main/_vex_y_gain\") }
    }
    channel _vex_y_bias {
      lefttype = extend
      righttype = extend
      default = 0.5
      flags = 0
      segment { length = 0 value = 0.5 0.5 expr = ch(\"../do_twist_main/_vex_y_bias\") }
    }
    channel _vex_end_inner_angle {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../do_twist_main/_vex_end_inner_angle\") }
    }
    channel _vex_end_angle {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../do_twist_main/_vex_end_angle\") }
    }
    channel _vex_start_inner_angle {
      lefttype = extend
      righttype = extend
      default = 90
      flags = 0
      segment { length = 0 value = 90 90 expr = ch(\"../do_twist_main/_vex_start_inner_angle\") }
    }
    channel _vex_start_angle {
      lefttype = extend
      righttype = extend
      default = 90
      flags = 0
      segment { length = 0 value = 90 90 expr = ch(\"../do_twist_main/_vex_start_angle\") }
    }
    channel separator_1 {
      lefttype = extend
      righttype = extend
      defaultString = \"\"
      flags = 0
      segment { length = 0 expr = chs(\"../do_twist_main/separator_1\") }
    }
    channel _vex_envelope {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../do_twist_main/_vex_envelope\") }
    }
    channel _vex_invert_weight {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../do_twist_main/_vex_invert_weight\") }
    }
    channel _vex_weight_name {
      lefttype = extend
      righttype = extend
      defaultString = chs(\"../weight_name\")
      flags = 0
      segment { length = 0 expr = chs(\"../do_twist_main/_vex_weight_name\") }
    }
    channel _vex_use_weight {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../do_twist_main/_vex_use_weight\") }
    }
    channel apply_post_xform {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../do_twist_main/apply_post_xform\") }
    }
    channel apply_pre_xform {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../do_twist_main/apply_pre_xform\") }
    }
    channel vex_reload {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../do_twist_main/vex_reload\") }
    }
    channel vex_edit {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../do_twist_main/vex_edit\") }
    }
    channel vex_numthreads {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../do_twist_main/vex_numthreads\") }
    }
    channel vex_group {
      lefttype = extend
      righttype = extend
      defaultString = \"\"
      flags = 0
      segment { length = 0 expr = chs(\"../do_twist_main/vex_group\") }
    }
  }

# Dialog script for waypoint_ql automatically generated 03/13/12 01:09:20

{
    name	waypoint_ql
    script	waypoint_ql
    label	"Waypoint qL"

    help {
	""
    }

    inputlabel	1	"Sub-Network Input #1"
    inputlabel	2	"Sub-Network Input #2"
    inputlabel	3	"Sub-Network Input #3"
    inputlabel	4	"Sub-Network Input #4"

    group {
	name	"folder1"
	label	".: SOP Waypoint :."

	parm {
	    name	"input"
	    label	"Input Select"
	    type	integer
	    default	{ "0" }
	    menureplace	{
		"0"	"1st Input"
		"1"	"2nd Input"
		"2"	"3rd Input"
		"3"	"4th Input"
	    }
	    range	{ 0! 3! }
	    export	none
	    parmtag	{ "autoscope" "0000000000000000" }
	}
	parm {
	    name	"passthru"
	    label	"Pass Through (Disabled)"
	    type	toggle
	    default	{ "1" }
	    range	{ 0! 10 }
	    export	none
	    parmtag	{ "autoscope" "0000000000000000" }
	}
	group {
	    name	"folder2"
	    label	"Writer"
	    tabbreak

	    import {
		label	Writer
		source	"op:geom_writer"
		mask	"* ^soppath ^alfprogress ^*pre* ^*post*"
		enable	1

		parm {
		    name	"execute"
		    label	"Render"
		    type	button
		    joinnext
		    default	{ "0" }
		    range	{ 0 1 }
		    export	none
		    parmtag	{ "import_token" "execute" }
		    parmtag	{ "import_source" "op:geom_writer" }
		    parmtag	{ "autoscope" "0000000000000000" }
		}
		parm {
		    name	"renderdialog"
		    label	"Render Control..."
		    type	button
		    default	{ "0" }
		    range	{ 0 1 }
		    export	none
		    parmtag	{ "import_token" "renderdialog" }
		    parmtag	{ "import_source" "op:geom_writer" }
		    parmtag	{ "autoscope" "0000000000000000" }
		}
		parm {
		    name	"trange"
		    label	"Valid Frame Range"
		    type	ordinal
		    default	{ "off" }
		    menu	{
			"off"	"Render Any Frame"
			"normal"	"Render Frame Range"
			"on"	"Render Frame Range Only (Strict)"
		    }
		    range	{ 0 1 }
		    export	none
		    parmtag	{ "import_token" "trange" }
		    parmtag	{ "import_source" "op:geom_writer" }
		    parmtag	{ "autoscope" "0000000000000000" }
		}
		parm {
		    name	"f"
		    label	"Start/End/Inc"
		    type	float
		    size	3
		    default	{ "1" "240" "1" }
		    disablewhen	"{ trange == off }"
		    range	{ 0 10 }
		    export	none
		    parmtag	{ "import_token" "f" }
		    parmtag	{ "import_source" "op:geom_writer" }
		    parmtag	{ "autoscope" "0000000000000000" }
		}
		parm {
		    name	"take"
		    label	"Render With Take"
		    type	string
		    default	{ "_current_" }
		    menu	{
			[ "opmenu -l geom_writer take" ]
		    }
		    range	{ 0 1 }
		    export	none
		    parmtag	{ "import_token" "take" }
		    parmtag	{ "import_source" "op:geom_writer" }
		    parmtag	{ "autoscope" "0000000000000000" }
		}
		parm {
		    name	"sopoutput"
		    label	"Output File"
		    type	file
		    default	{ "$HIP/${OS}_i`ch(\"input\")`.bgeo.gz" }
		    help	"Path/name of the stored geometry file (press MMB to toggle expanded string)."
		    menureplace	{
			[ "opmenu -l geom_writer sopoutput" ]
			[ "echo '$HIP/${OS}_i`ch(\\\"input\\\")`.bgeo.gz' \"Filename_with_input_index\"" ]
		    }
		    range	{ 0 1 }
		    export	none
		    parmtag	{ "import_token" "sopoutput" }
		    parmtag	{ "import_source" "op:geom_writer" }
		    parmtag	{ "autoscope" "0000000000000000" }
		}
		parm {
		    name	"xformtype"
		    label	"Transform"
		    type	ordinal
		    default	{ "none" }
		    menu	{
			"none"	"None"
			"world"	"Into World Space"
		    }
		    range	{ 0 1 }
		    export	none
		    parmtag	{ "import_token" "xformtype" }
		    parmtag	{ "import_source" "op:geom_writer" }
		    parmtag	{ "autoscope" "0000000000000000" }
		}
		parm {
		    name	"initsim"
		    label	"Initialize Simulation OPs"
		    type	toggle
		    default	{ "off" }
		    range	{ 0 1 }
		    export	none
		    parmtag	{ "import_token" "initsim" }
		    parmtag	{ "import_source" "op:geom_writer" }
		    parmtag	{ "autoscope" "0000000000000000" }
		}
		parm {
		    name	"reportnetwork"
		    label	"Report Network Use"
		    type	toggle
		    default	{ "off" }
		    range	{ 0 1 }
		    export	none
		    parmtag	{ "import_token" "reportnetwork" }
		    parmtag	{ "import_source" "op:geom_writer" }
		    parmtag	{ "autoscope" "0000000000000000" }
		}
		parm {
		    name	"saveretry"
		    label	"Save Retries"
		    type	integer
		    default	{ "0" }
		    range	{ 0! 5 }
		    export	none
		    parmtag	{ "import_token" "saveretry" }
		    parmtag	{ "import_source" "op:geom_writer" }
		    parmtag	{ "autoscope" "0000000000000000" }
		}
	    }

	}

	group {
	    name	"folder2_1"
	    label	"Reader"
	    tabbreak

	    import {
		label	Reader
		source	"op:geom_reader"
		mask	"reload objpattern geodatapath missingframe"
		enable	1

		parm {
		    name	"reload"
		    label	"Reload Geometry"
		    type	button
		    default	{ "0" }
		    range	{ 0 1 }
		    export	none
		    parmtag	{ "import_token" "reload" }
		    parmtag	{ "import_source" "op:geom_reader" }
		    parmtag	{ "autoscope" "0000000000000000" }
		}
		parm {
		    name	"objpattern"
		    label	"Object Mask"
		    type	string
		    default	{ "*" }
		    range	{ 0 1 }
		    export	none
		    parmtag	{ "import_token" "objpattern" }
		    parmtag	{ "import_source" "op:geom_reader" }
		    parmtag	{ "autoscope" "0000000000000000" }
		}
		parm {
		    name	"geodatapath"
		    label	"Geometry Data Path"
		    type	string
		    default	{ "" }
		    range	{ 0 1 }
		    export	none
		    parmtag	{ "import_token" "geodatapath" }
		    parmtag	{ "import_source" "op:geom_reader" }
		    parmtag	{ "autoscope" "0000000000000000" }
		}
		parm {
		    name	"missingframe"
		    label	"Missing Frame"
		    type	ordinal
		    default	{ "error" }
		    menu	{
			"error"	"Report Error"
			"empty"	"No Geometry"
		    }
		    range	{ 0 1 }
		    export	none
		    parmtag	{ "import_token" "missingframe" }
		    parmtag	{ "import_source" "op:geom_reader" }
		    parmtag	{ "autoscope" "0000000000000000" }
		}
	    }

	}

	group {
	    name	"folder4"
	    label	"NOTE"

	    parm {
		name	"labelparm"
		label	"Label"
		type	label
		nolabel
		default	{ "NOTE: Press 'Reload Geometry' in the Reader tab" }
		range	{ 0 1 }
		export	none
	    }
	    parm {
		name	"labelparm2"
		label	"Label"
		type	label
		nolabel
		default	{ "after geometry writing ('Render')." }
		range	{ 0 1 }
		export	none
	    }
	}

    }

}

# Dialog script for qLib::waypoint_ql::2 automatically generated 08/05/12 01:26:00

{
    name	qLib::waypoint_ql::2
    script	qLib::waypoint_ql::1
    label	"Waypoint qL"

    help {
	""
    }

    inputlabel	1	"Input Geometry"
    inputlabel	2	"Sub-Network Input #2"
    inputlabel	3	"Sub-Network Input #3"
    inputlabel	4	"Sub-Network Input #4"
    inputlabel	5	"Sub-Network Input #5"

    import {
	label	"SOP Waypoint"
	enable	0

	parm {
	    name	"passthru"
	    label	"Waypoint State"
	    type	integer
	    default	{ "1" }
	    menu	{
		"0"	"ACTIVE: Read from Disk"
		"1"	"Pass Through (disabled)"
	    }
	    range	{ 0! 10 }
	    export	none
	    parmtag	{ "script_callback_language" "python" }
	    parmtag	{ "script_callback" "hou.pwd().hdaModule().set_color(kwargs)" }
	    parmtag	{ "autoscope" "0000000000000000" }
	}
	parm {
	    name	"pts_only"
	    label	"Points Only for Consecutive Frames"
	    type	toggle
	    default	{ "0" }
	    range	{ 0 1 }
	    export	none
	}
	parm {
	    name	"delattribs"
	    label	"Remove Attribs"
	    type	string
	    default	{ "* ^v" }
	    disablewhen	"{ pts_only == 0 }"
	    range	{ 0 1 }
	    export	none
	    parmtag	{ "autoscope" "0000000000000000" }
	}
	group {
	    name	"folder3"
	    label	"File Name"

	    parm {
		name	"outdir"
		label	"Output Directory"
		type	file
		joinnext
		default	{ "$HIP/tmp--sim/${OS}" }
		menureplace	{
		    "$HIP/tmp--sim/${OS}"	"default: sim dir/op.name"
		    "$HIP/tmp--sim/${OS}_v`ch(\"variant\")`"	"sim dir/op.name + variant"
		    "$HIP/tmp--sim/${OS}_`chs(\"variantname\")`"	"sim dir/op.name + variant name"
		}
		range	{ 0 1 }
		export	none
	    }
	    parm {
		name	"outdir_open"
		label	"..."
		type	button
		default	{ "1" }
		help	"Open this directory in the OS file manager."
		range	{ 0 1 }
		export	none
		parmtag	{ "script_callback_language" "python" }
		parmtag	{ "script_callback" "hou.pwd().hdaModule().open_dir(param='outdir')" }
	    }
	    parm {
		name	"outname"
		label	"* Name"
		type	string
		default	{ "${OS}_v`ch(\"variant\")`" }
		menureplace	{
		    "${OS}"	"waypoint OP name"
		    "${OS}_v`ch(\"variant\")`"	"OP name & variant number"
		    "${OS}_`chs(\"variantname\")`"	"OP name + variant (name)"
		}
		range	{ 0 1 }
		export	none
	    }
	    parm {
		name	"outext"
		label	"Extension"
		type	string
		default	{ "$F4.bgeo.gz" }
		menureplace	{
		    "bgeo.gz"	"single file (bgeo.gz)"
		    "$F4.bgeo.gz"	"sequence ($F4.bgeo.gz)"
		    "$F4.bgeo"	"sequence ($F4.bgeo)"
		    "$F4.bhclassic"	"sequence ($F4.bhclassic)"
		}
		range	{ 0 1 }
		export	none
	    }
	    parm {
		name	"empty_label_3"
		label	"Label"
		type	label
		nolabel
		default	{ "" }
		range	{ 0 1 }
		export	none
	    }
	    import {
		label	Variants
		enable	0

		parm {
		    name	"variant"
		    label	"Output Variant"
		    type	integer
		    default	{ "0" }
		    range	{ 0! 9 }
		    export	none
		}
		parm {
		    name	"variantnames"
		    label	"Variant Names"
		    type	string
		    default	{ "default proxy hires" }
		    range	{ 0 1 }
		    export	none
		}
		parm {
		    name	"variantname"
		    label	"* Variant Name"
		    type	string
		    default	{ "`arg(chs(\"variantnames\"), ch(\"variant\"))`" }
		    disablewhen	"{ variant >= 0 }"
		    range	{ 0 1 }
		    export	none
		}
	    }

	    parm {
		name	"empty_label_2"
		label	"Label"
		type	label
		nolabel
		default	{ "" }
		range	{ 0 1 }
		export	none
	    }
	    parm {
		name	"outfile"
		label	"* Full Path/Name"
		type	string
		default	{ "`chs(\"outdir\")`/`chs(\"outname\")`.`chs(\"outext\")`" }
		range	{ 0 1 }
		export	none
	    }
	    parm {
		name	"outpattern"
		label	"* fs Pattern"
		type	string
		invisible
		default	{ "`chs(\"outdir\")`/`chs(\"outname\")`.*" }
		range	{ 0 1 }
		export	none
	    }
	    parm {
		name	"delete_files"
		label	"Delete Cached Files..."
		type	button
		invisible
		default	{ "1" }
		range	{ 0 1 }
		export	none
	    }
	}

	group {
	    name	"folder3_1"
	    label	"Writer"

	    parm {
		name	"execute"
		label	"Render"
		type	button
		joinnext
		default	{ [ "ch(\"../execute\")" hscript-expr ] }
		range	{ 0 1 }
		export	none
		parmtag	{ "import_token" "execute" }
		parmtag	{ "import_source" "op:RENDER" }
		parmtag	{ "autoscope" "0000000000000000" }
	    }
	    parm {
		name	"renderdialog"
		label	"Render Control..."
		type	button
		default	{ [ "ch(\"../renderdialog\")" hscript-expr ] }
		range	{ 0 1 }
		export	none
		parmtag	{ "import_token" "renderdialog" }
		parmtag	{ "import_source" "op:RENDER" }
		parmtag	{ "autoscope" "0000000000000000" }
	    }
	    parm {
		name	"trange"
		label	"Valid Frame Range"
		type	ordinal
		default	{ "off" }
		menu	{
		    "off"	"Render Any Frame"
		    "normal"	"Render Frame Range"
		    "on"	"Render Frame Range Only (Strict)"
		}
		range	{ 0 1 }
		export	none
		parmtag	{ "import_token" "trange" }
		parmtag	{ "import_source" "op:RENDER" }
		parmtag	{ "autoscope" "0000000000000000" }
	    }
	    parm {
		name	"f"
		label	"Start/End/Inc"
		type	float
		size	3
		default	{ "1" "240" "1" }
		disablewhen	"{ trange == off }"
		range	{ 0 10 }
		export	none
		parmtag	{ "import_token" "f" }
		parmtag	{ "import_source" "op:RENDER" }
		parmtag	{ "autoscope" "0000000000000000" }
	    }
	    parm {
		name	"take"
		label	"Render With Take"
		type	string
		default	{ "_current_" }
		menu	{
		    [ "opmenu -l RENDER take" ]
		}
		range	{ 0 1 }
		export	none
		parmtag	{ "import_token" "take" }
		parmtag	{ "import_source" "op:RENDER" }
		parmtag	{ "autoscope" "0000000000000000" }
	    }
	    parm {
		name	"sopoutput"
		label	"Output File"
		type	file
		default	{ "`chs(\"outfile\")`" }
		menureplace	{
		    [ "opmenu -l RENDER sopoutput" ]
		}
		range	{ 0 1 }
		export	none
		parmtag	{ "import_token" "sopoutput" }
		parmtag	{ "import_source" "op:RENDER" }
		parmtag	{ "autoscope" "0000000000000000" }
	    }
	    parm {
		name	"xformtype"
		label	"Transform"
		type	ordinal
		default	{ "none" }
		menu	{
		    "none"	"None"
		    "world"	"Into World Space"
		}
		range	{ 0 1 }
		export	none
		parmtag	{ "import_token" "xformtype" }
		parmtag	{ "import_source" "op:RENDER" }
		parmtag	{ "autoscope" "0000000000000000" }
	    }
	    parm {
		name	"initsim"
		label	"Initialize Simulation OPs"
		type	toggle
		default	{ "off" }
		range	{ 0 1 }
		export	none
		parmtag	{ "import_token" "initsim" }
		parmtag	{ "import_source" "op:RENDER" }
		parmtag	{ "autoscope" "0000000000000000" }
	    }
	    parm {
		name	"reportnetwork"
		label	"Report Network Use"
		type	toggle
		default	{ "off" }
		range	{ 0 1 }
		export	none
		parmtag	{ "import_token" "reportnetwork" }
		parmtag	{ "import_source" "op:RENDER" }
		parmtag	{ "autoscope" "0000000000000000" }
	    }
	    parm {
		name	"saveretry"
		label	"Save Retries"
		type	integer
		default	{ "0" }
		range	{ 0! 5 }
		export	none
		parmtag	{ "import_token" "saveretry" }
		parmtag	{ "import_source" "op:RENDER" }
		parmtag	{ "autoscope" "0000000000000000" }
	    }
	    parm {
		name	"savebackground"
		label	"Save in Background"
		type	toggle
		default	{ "on" }
		range	{ 0 1 }
		export	none
		parmtag	{ "import_token" "savebackground" }
		parmtag	{ "import_source" "op:RENDER" }
		parmtag	{ "autoscope" "0000000000000000" }
	    }
	    parm {
		name	"perfmon"
		label	"Performance Monitoring"
		type	toggle
		nolabel
		joinnext
		default	{ "0" }
		help	"Enable the Performance Monitor during render and write the results to a file."
		range	{ 0 1 }
		export	none
	    }
	    parm {
		name	"perfmon_output"
		label	"PerfMon Output"
		type	file
		default	{ "$HIP/$HIPNAME:r.${OS}.i`ch(\"variant\")`.hperf" }
		help	"Output file for recorded performance monitor data."
		disablewhen	"{ perfmon == 0 }"
		range	{ 0 1 }
		export	none
	    }
	    parm {
		name	"clear_log"
		label	"Clear Comment Log"
		type	button
		default	{ "1" }
		range	{ 0 1 }
		export	none
		parmtag	{ "script_callback_language" "python" }
		parmtag	{ "script_callback" "hou.pwd().hdaModule().clear_log()" }
	    }
	    parm {
		name	"label_ptsonly_3"
		label	"Label"
		type	label
		nolabel
		default	{ "POINTS ONLY: A frame range should also be set for this mode." }
		hidewhen	"{ pts_only == 0 } { trange != off }"
		range	{ 0 1 }
		export	none
	    }
	    parm {
		name	"label_ptsonly_1"
		label	"Label"
		type	label
		nolabel
		default	{ "POINTS ONLY: the full geometry will be written for frame `ch(\"f1\")`." }
		hidewhen	"{ pts_only == 0 } { trange == off }"
		range	{ 0 1 }
		export	none
	    }
	}

	group {
	    name	"folder3_2"
	    label	"Reader"

	    parm {
		name	"reload"
		label	"Reload Geometry"
		type	button
		default	{ "0" }
		range	{ 0 1 }
		export	none
		parmtag	{ "import_token" "reload" }
		parmtag	{ "import_source" "op:geom_reader" }
		parmtag	{ "autoscope" "0000000000000000" }
	    }
	    parm {
		name	"objpattern"
		label	"Object Mask"
		type	string
		default	{ "*" }
		range	{ 0 1 }
		export	none
		parmtag	{ "import_token" "objpattern" }
		parmtag	{ "import_source" "op:geom_reader" }
		parmtag	{ "autoscope" "0000000000000000" }
	    }
	    parm {
		name	"geodatapath"
		label	"Geometry Data Path"
		type	string
		default	{ "" }
		range	{ 0 1 }
		export	none
		parmtag	{ "import_token" "geodatapath" }
		parmtag	{ "import_source" "op:geom_reader" }
		parmtag	{ "autoscope" "0000000000000000" }
	    }
	    parm {
		name	"missingframe"
		label	"Missing Frame"
		type	ordinal
		default	{ "error" }
		menu	{
		    "error"	"Report Error"
		    "empty"	"No Geometry"
		}
		range	{ 0 1 }
		export	none
		parmtag	{ "import_token" "missingframe" }
		parmtag	{ "import_source" "op:geom_reader" }
		parmtag	{ "autoscope" "0000000000000000" }
	    }
	    parm {
		name	"loadtype"
		label	"Load"
		type	ordinal
		default	{ "full" }
		menu	{
		    "full"	"All Geometry"
		    "infobbox"	"Info Bounding Box"
		    "info"	"Info"
		}
		range	{ 0 1 }
		export	none
		parmtag	{ "import_token" "loadtype" }
		parmtag	{ "import_source" "op:geom_reader" }
		parmtag	{ "autoscope" "0000000000000000" }
	    }
	    group {
		name	"folder5"
		label	"Frame Range"

		parm {
		    name	"clamp_frame_range"
		    label	"Clamp Frame Range"
		    type	toggle
		    nolabel
		    joinnext
		    default	{ "1" }
		    disablewhen	"{ trange == off }"
		    range	{ 0 1 }
		    export	none
		}
		parm {
		    name	"rf"
		    label	"Clamp Range to"
		    type	float
		    size	2
		    default	{ "ch(\"f1\")" "ch(\"f2\")" }
		    disablewhen	"{ trange == off } { clamp_frame_range == 0 }"
		    range	{ 0 10 }
		    export	none
		    parmtag	{ "autoscope" "0000000000000000" }
		}
		parm {
		    name	"frame"
		    label	"Frame #"
		    type	float
		    default	{ "clamp(ch(\"rf1\"), ch(\"rf2\"), $FF)" }
		    disablewhen	"{ trange == off } { clamp_frame_range == 0 }"
		    range	{ 0 10 }
		    export	none
		}
	    }

	    parm {
		name	"label_ptsonly_4"
		label	"Label"
		type	label
		nolabel
		default	{ "POINTS ONLY: full-geometry file expected @ frame `ch(\"f1\")`." }
		hidewhen	"{ pts_only == 0 }"
		range	{ 0 1 }
		export	none
	    }
	}

	group {
	    name	"folder3_3"
	    label	"NOTE"
	    invisibletab

	    parm {
		name	"labelparm"
		label	"Label"
		type	label
		invisible
		nolabel
		default	{ "Press 'Reload' in Reader tab after (re-)Rendering geometry." }
		range	{ 0 1 }
		export	none
	    }
	    parm {
		name	"label_ptsonly_2"
		label	"Label"
		type	label
		nolabel
		default	{ "POINTS ONLY: full geometry stored for frame #`ch(\"f1\")` only." }
		hidewhen	"{ pts_only == 0 }"
		range	{ 0 1 }
		export	none
	    }
	}

	parm {
	    name	"note_"
	    label	"."
	    type	label
	    nolabel
	    default	{ "[*]: Press MMB to display result values." }
	    range	{ 0 1 }
	    export	none
	}
	parm {
	    name	"labelparm3"
	    label	"Label"
	    type	label
	    nolabel
	    default	{ "" }
	    range	{ 0 1 }
	    export	none
	}
	parm {
	    name	"make_dir"
	    label	"Create Output Directory"
	    type	button
	    default	{ "1" }
	    range	{ 0 1 }
	    export	none
	    parmtag	{ "script_callback_language" "python" }
	    parmtag	{ "script_callback" "hou.pwd().hdaModule().mk_dir(param='outdir')" }
	}
	parm {
	    name	"outdir_open2"
	    label	"Open in File Manager..."
	    type	button
	    default	{ "1" }
	    help	"Open this directory in the OS file manager."
	    range	{ 0 1 }
	    export	none
	    parmtag	{ "script_callback_language" "python" }
	    parmtag	{ "script_callback" "hou.pwd().hdaModule().open_dir(param='outdir')" }
	}
	parm {
	    name	"outdir_delete"
	    label	"Delete Directory..."
	    type	button
	    default	{ "1" }
	    help	"Open this directory in the OS file manager."
	    range	{ 0 1 }
	    export	none
	    parmtag	{ "script_callback_language" "python" }
	    parmtag	{ "script_callback" "hou.pwd().hdaModule().rm_dir(param='outdir')" }
	}
    }

}

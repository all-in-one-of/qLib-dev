{
    channel _vex_set_position {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../set_position\") }
    }
    channel _vex_positionx {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../positionx\") }
    }
    channel _vex_positiony {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../positiony\") }
    }
    channel _vex_positionz {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../positionz\") }
    }
    channel _vex_set_up {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../set_up\") }
    }
    channel _vex_upx {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../upx\") }
    }
    channel _vex_upy {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../upy\") }
    }
    channel _vex_upz {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../upz\") }
    }
    channel vex_group {
      lefttype = extend
      righttype = extend
      defaultString = \"\"
      flags = 0
      segment { length = 0 expr = chs(\"../group\") }
    }
    channel _vex_set_velocity {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../set_velocity\") }
    }
    channel _vex_velocityx {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../velocityx\") }
    }
    channel _vex_velocityy {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../velocityy\") }
    }
    channel _vex_velocityz {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../velocityz\") }
    }
    channel _vex_set_normal {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../set_normal\") }
    }
  }

# Dialog script for qLib::pointjitter_ql::1 automatically generated 07/26/12 23:24:44

{
    name	qLib::pointjitter_ql::1
    script	qLib::pointjitter_ql::1
    label	"PointJitter qL"

    help {
	""
    }

    inputlabel	1	"Sub-Network Input #1"
    inputlabel	2	"Sub-Network Input #2"
    inputlabel	3	"Sub-Network Input #3"
    inputlabel	4	"Sub-Network Input #4"

    parm {
	name	"group"
	label	"Group"
	type	string
	default	{ "" }
	menutoggle	{
	    [ "opmenu -l vopsop_jitter vex_group" ]
	}
	range	{ 0 1 }
	export	none
	parmtag	{ "autoscope" "0000000000000000" }
    }
    group {
	name	"folder0"
	label	"Jitter"

	import {
	    label	params
	    source	"op:vopsop_jitter"
	    mask	"useidattrib idattrib scale axisscale seed"
	    enable	1

	    parm {
		name	"useidattrib"
		label	"Use Id Attribute"
		type	toggle
		nolabel
		joinnext
		default	{ "off" }
		range	{ 0 1 }
		export	none
		parmtag	{ "import_token" "useidattrib" }
		parmtag	{ "import_source" "op:vopsop_jitter" }
		parmtag	{ "autoscope" "0000000000000000" }
	    }
	    parm {
		name	"idattrib"
		label	"Id Attribute"
		type	string
		default	{ "id" }
		help	"Use this per-point integer attribute as random seed."
		disablewhen	"{ useidattrib == 0 }"
		range	{ 0 1 }
		export	none
		parmtag	{ "import_token" "idattrib" }
		parmtag	{ "import_source" "op:vopsop_jitter" }
		parmtag	{ "autoscope" "0000000000000000" }
	    }
	    parm {
		name	"scale"
		label	"Scale"
		type	float
		default	{ "1" }
		range	{ 0 1 }
		export	none
		parmtag	{ "import_token" "scale" }
		parmtag	{ "import_source" "op:vopsop_jitter" }
		parmtag	{ "autoscope" "0000000000000000" }
	    }
	    parm {
		name	"axisscale"
		label	"Axis Scales"
		type	direction
		size	3
		default	{ "1" "1" "1" }
		range	{ 0 1 }
		export	none
		parmtag	{ "import_token" "axisscale" }
		parmtag	{ "import_source" "op:vopsop_jitter" }
		parmtag	{ "autoscope" "0000000000000000" }
	    }
	    parm {
		name	"seed"
		label	"Seed"
		type	float
		default	{ "0" }
		range	{ 0 1000 }
		export	none
		parmtag	{ "import_token" "seed" }
		parmtag	{ "import_source" "op:vopsop_jitter" }
		parmtag	{ "autoscope" "0000000000000000" }
	    }
	}

	import {
	    label	PScale
	    enable	0

	    import {
		label	params_pscale
		source	"op:vopsop_jitter"
		mask	"*pscale*"
		enable	1

		parm {
		    name	"usepscale"
		    label	"Use PScale"
		    type	toggle
		    nolabel
		    joinnext
		    default	{ "off" }
		    range	{ 0 1 }
		    export	none
		    parmtag	{ "import_token" "usepscale" }
		    parmtag	{ "import_source" "op:vopsop_jitter" }
		    parmtag	{ "autoscope" "0000000000000000" }
		}
		parm {
		    name	"pscalename"
		    label	"PScale Attribute"
		    type	string
		    default	{ "pscale" }
		    disablewhen	"{ usepscale == 0 }"
		    range	{ 0 1 }
		    export	none
		    parmtag	{ "import_token" "pscalename" }
		    parmtag	{ "import_source" "op:vopsop_jitter" }
		    parmtag	{ "autoscope" "0000000000000000" }
		}
		parm {
		    name	"pscaleinvert"
		    label	"Invert"
		    type	toggle
		    default	{ "off" }
		    disablewhen	"{ usepscale == 0 }"
		    range	{ 0 1 }
		    export	none
		    parmtag	{ "import_token" "pscaleinvert" }
		    parmtag	{ "import_source" "op:vopsop_jitter" }
		    parmtag	{ "autoscope" "0000000000000000" }
		}
		parm {
		    name	"pscaleexp"
		    label	"Exponent"
		    type	float
		    default	{ "1" }
		    disablewhen	"{ usepscale == 0 }"
		    range	{ 0.1 4 }
		    export	none
		    parmtag	{ "import_token" "pscaleexp" }
		    parmtag	{ "import_source" "op:vopsop_jitter" }
		    parmtag	{ "autoscope" "0000000000000000" }
		}
	    }

	}

	parm {
	    name	"updatenmls"
	    label	"Post-Compute Normals"
	    type	toggle
	    default	{ "0" }
	    range	{ 0! 10 }
	    export	none
	    parmtag	{ "autoscope" "0000000000000000" }
	}
    }

    group {
	name	"folder0_1"
	label	"Axis Settings"

	import {
	    label	axisranges
	    source	"op:vopsop_jitter"
	    mask	"axisrange*"
	    enable	1

	    parm {
		name	"axisrangemin"
		label	"Axis Range Min"
		type	direction
		size	3
		default	{ "-0.5" "-0.5" "-0.5" }
		range	{ 0 1 }
		export	none
		parmtag	{ "import_token" "axisrangemin" }
		parmtag	{ "import_source" "op:vopsop_jitter" }
		parmtag	{ "autoscope" "0000000000000000" }
	    }
	    parm {
		name	"axisrangemax"
		label	"Axis Range Max"
		type	direction
		size	3
		default	{ "0.5" "0.5" "0.5" }
		range	{ 0 1 }
		export	none
		parmtag	{ "import_token" "axisrangemax" }
		parmtag	{ "import_source" "op:vopsop_jitter" }
		parmtag	{ "autoscope" "0000000000000000" }
	    }
	}

	import {
	    label	vectors
	    source	"op:vopsop_jitter"
	    mask	"useaxisvectors vectype[xyz] attrib[xyz]"
	    enable	1

	    parm {
		name	"useaxisvectors"
		label	"Use Axis Vectors"
		type	toggle
		default	{ "off" }
		range	{ 0 1 }
		export	none
		parmtag	{ "import_token" "useaxisvectors" }
		parmtag	{ "import_source" "op:vopsop_jitter" }
		parmtag	{ "autoscope" "0000000000000000" }
	    }
	    parm {
		name	"vectypex"
		label	"X Axis"
		type	integer
		joinnext
		default	{ "0" }
		disablewhen	"{ useaxisvectors == 0 }"
		menu	{
		    "0"	"Constant (X+)"
		    "1"	"Attribute"
		}
		range	{ 0 10 }
		export	none
		parmtag	{ "import_token" "vectypex" }
		parmtag	{ "import_source" "op:vopsop_jitter" }
		parmtag	{ "autoscope" "0000000000000000" }
	    }
	    parm {
		name	"attribx"
		label	"attribx"
		type	string
		nolabel
		default	{ "v" }
		disablewhen	"{ useaxisvectors == 0 } { vectypex != 1 }"
		menureplace	{
		    [ "r = []" ]
		    [ "" ]
		    [ "try:" ]
		    [ "    attrs = hou.pwd().geometry().pointAttribs()" ]
		    [ "    attrs = [ a.name() for a in attrs \\" ]
		    [ "        if a.dataType() is not hou.attribData.String \\" ]
		    [ "        and a.size()==3 ]" ]
		    [ "    " ]
		    [ "    for a in attrs:" ]
		    [ "        r.append(a)" ]
		    [ "        r.append(a)" ]
		    [ "except:" ]
		    [ "    pass" ]
		    [ "" ]
		    [ "return r" ]
		    language	python
		}
		range	{ 0 1 }
		export	none
		parmtag	{ "import_token" "attribx" }
		parmtag	{ "import_source" "op:vopsop_jitter" }
		parmtag	{ "autoscope" "0000000000000000" }
	    }
	    parm {
		name	"vectypey"
		label	"Y Axis"
		type	integer
		joinnext
		default	{ "0" }
		disablewhen	"{ useaxisvectors == 0 }"
		menu	{
		    "0"	"Constant (Y+)"
		    "1"	"Attribute"
		}
		range	{ 0 10 }
		export	none
		parmtag	{ "import_token" "vectypey" }
		parmtag	{ "import_source" "op:vopsop_jitter" }
		parmtag	{ "autoscope" "0000000000000000" }
	    }
	    parm {
		name	"attriby"
		label	"attriby"
		type	string
		nolabel
		default	{ "up" }
		disablewhen	"{ useaxisvectors == 0 } { vectypey != 1 }"
		menureplace	{
		    [ "r = []" ]
		    [ "" ]
		    [ "try:" ]
		    [ "    attrs = hou.pwd().geometry().pointAttribs()" ]
		    [ "    attrs = [ a.name() for a in attrs \\" ]
		    [ "        if a.dataType() is not hou.attribData.String \\" ]
		    [ "        and a.size()==3 ]" ]
		    [ "    " ]
		    [ "    for a in attrs:" ]
		    [ "        r.append(a)" ]
		    [ "        r.append(a)" ]
		    [ "except:" ]
		    [ "    pass" ]
		    [ "" ]
		    [ "return r" ]
		    language	python
		}
		range	{ 0 1 }
		export	none
		parmtag	{ "import_token" "attriby" }
		parmtag	{ "import_source" "op:vopsop_jitter" }
		parmtag	{ "autoscope" "0000000000000000" }
	    }
	    parm {
		name	"vectypez"
		label	"Z Axis"
		type	integer
		joinnext
		default	{ "0" }
		disablewhen	"{ useaxisvectors == 0 }"
		menu	{
		    "0"	"Constant (Z+)"
		    "1"	"Attribute"
		    "2"	"Cross X*Y"
		}
		range	{ 0 10 }
		export	none
		parmtag	{ "import_token" "vectypez" }
		parmtag	{ "import_source" "op:vopsop_jitter" }
		parmtag	{ "autoscope" "0000000000000000" }
	    }
	    parm {
		name	"attribz"
		label	"attribz"
		type	string
		nolabel
		default	{ "" }
		disablewhen	"{ useaxisvectors == 0 } { vectypez != 1 }"
		menureplace	{
		    [ "r = []" ]
		    [ "" ]
		    [ "try:" ]
		    [ "    attrs = hou.pwd().geometry().pointAttribs()" ]
		    [ "    attrs = [ a.name() for a in attrs \\" ]
		    [ "        if a.dataType() is not hou.attribData.String \\" ]
		    [ "        and a.size()==3 ]" ]
		    [ "    " ]
		    [ "    for a in attrs:" ]
		    [ "        r.append(a)" ]
		    [ "        r.append(a)" ]
		    [ "except:" ]
		    [ "    pass" ]
		    [ "" ]
		    [ "return r" ]
		    language	python
		}
		range	{ 0 1 }
		export	none
		parmtag	{ "import_token" "attribz" }
		parmtag	{ "import_source" "op:vopsop_jitter" }
		parmtag	{ "autoscope" "0000000000000000" }
	    }
	}

    }

}

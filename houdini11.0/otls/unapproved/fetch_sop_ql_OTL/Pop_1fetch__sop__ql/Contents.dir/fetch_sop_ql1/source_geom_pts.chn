{
    channel impulseactivate {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../impulseactivate\") }
    }
    channel impulserate {
      lefttype = extend
      righttype = extend
      default = 4
      flags = 0
      segment { length = 0 value = 4 4 expr = $NPT }
    }
    channel soppath {
      lefttype = extend
      righttype = extend
      defaultString = \"../../../xform1\"
      flags = 0
      segment { length = 0 expr = chsop(\"../soppath\") }
    }
    channel ignorexform {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../ignorexform\") }
    }
    channel group {
      lefttype = extend
      righttype = extend
      defaultString = \"\"
      flags = 0
      segment { length = 0 expr = chs(\"../group\") }
    }
    channel preservegroup {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../preservegroup\") }
    }
    channel life {
      lefttype = extend
      righttype = extend
      default = 100
      flags = 0
      segment { length = 0 value = 100 100 expr = ch(\"../life\") }
    }
    channel lifevar {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../lifevar\") }
    }
    channel attrib {
      lefttype = extend
      righttype = extend
      defaultString = \"*\"
      flags = 0
      segment { length = 0 expr = chs(\"../attrib\") }
    }
    channel createlocalvar {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../createlocalvar\") }
    }
    channel initvel {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../initvel\") }
    }
    channel inheritvel {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../inheritvel\") }
    }
    channel velx {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../velx\") }
    }
    channel vely {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../vely\") }
    }
    channel velz {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../velz\") }
    }
    channel varx {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../varx\") }
    }
    channel vary {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../vary\") }
    }
    channel varz {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../varz\") }
    }
  }

{
    channel vex_group {
      lefttype = extend
      righttype = extend
      defaultString = \"\"
      flags = 0
      segment { length = 0 expr = chs(\"../vex_group\") }
    }
    channel trs {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../xOrd\") }
    }
    channel xyz {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../rOrd\") }
    }
    channel trans1 {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../tx\") }
    }
    channel trans2 {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../ty\") }
    }
    channel trans3 {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../tz\") }
    }
    channel rot1 {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../rx\") }
    }
    channel rot2 {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../ry\") }
    }
    channel rot3 {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../rz\") }
    }
    channel scale1 {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../sx\") }
    }
    channel scale2 {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../sy\") }
    }
    channel scale3 {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../sz\") }
    }
    channel pivot1 {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../px\") }
    }
    channel pivot2 {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../py\") }
    }
    channel pivot3 {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../pz\") }
    }
  }

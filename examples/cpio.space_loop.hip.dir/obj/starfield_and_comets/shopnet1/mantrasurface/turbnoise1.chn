{
    channel freq1 {
      lefttype = extend
      righttype = extend
      default = 10
      flags = 0
      segment { length = 0 value = 10 10 expr = ch('../noiseFreq/float3def1') }
    }
    channel freq2 {
      lefttype = extend
      righttype = extend
      default = 10
      flags = 0
      segment { length = 0 value = 10 10 expr = ch('../noiseFreq/float3def2') }
    }
    channel freq3 {
      lefttype = extend
      righttype = extend
      default = 10
      flags = 0
      segment { length = 0 value = 10 10 expr = ch('../noiseFreq/float3def3') }
    }
    channel offset1 {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch('../noiseOffset/float3def1') }
    }
    channel offset2 {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch('../noiseOffset/float3def2') }
    }
    channel offset3 {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch('../noiseOffset/float3def3') }
    }
    channel amp {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch('../noiseAmp/floatdef') }
    }
    channel rough {
      lefttype = extend
      righttype = extend
      default = 0.5
      flags = 0
      segment { length = 0 value = 0.5 0.5 expr = ch('../noiseRough/floatdef') }
    }
    channel atten {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch('../noiseAtten/floatdef') }
    }
    channel turb {
      lefttype = extend
      righttype = extend
      default = 5
      flags = 0
      segment { length = 0 value = 5 5 expr = ch('../noiseTurb/intdef') }
    }
  }
